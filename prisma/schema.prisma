generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  adminId      String   @id @default(uuid())
  email        String   @unique
  password     String
  name         String?
  isSuperAdmin Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  categories      Category[]
  products        Products[]
  sales           Sales[]
  purchases       Purchases[]
  expenses        Expenses[]
  salesSummary    SalesSummary[]
  purchaseSummary PurchaseSummary[]
  expenseSummary  ExpenseSummary[]
}

model Category {
  categoryId String     @id @default(uuid())
  name       String
  adminId    String
  admin      Admin      @relation(fields: [adminId], references: [adminId])
  products   Products[]
}

model Products {
  productId  String           @id @default(uuid())
  name       String
  rating     Float?
  categoryId String?
  description String?
  adminId    String
  admin      Admin            @relation(fields: [adminId], references: [adminId])
  category   Category?        @relation(fields: [categoryId], references: [categoryId])
  variants   ProductVariant[]
  Sales      Sales[]
  Purchases  Purchases[]
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
}

model ProductVariant {
  variantId      String                    @id @default(uuid())
  sku            String?                   @unique
  purchasePrice  Float                     @default(0) // ðŸ†• cost of buying
  sellingPrice   Float                     @default(0) // ðŸ†• price for customers
  stockQuantity  Int                       @default(0)
  productId      String
  product        Products                  @relation(fields: [productId], references: [productId])
  attributes     ProductVariantAttribute[]
  createdAt      DateTime                  @default(now())
  updatedAt      DateTime                  @updatedAt
}

model ProductVariantAttribute {
  id        String         @id @default(uuid())
  name      String
  value     String
  variantId String
  variant   ProductVariant @relation(fields: [variantId], references: [variantId])
}

model Sales {
  saleId      String   @id @default(uuid())
  productId   String
  adminId     String
  admin       Admin    @relation(fields: [adminId], references: [adminId])
  timestamp   DateTime
  quantity    Int
  unitPrice   Float
  totalAmount Float
  product     Products @relation(fields: [productId], references: [productId])
}

model Purchases {
  purchaseId String   @id @default(uuid())
  productId  String
  adminId    String
  admin      Admin    @relation(fields: [adminId], references: [adminId])
  timestamp  DateTime
  quantity   Int
  unitCost   Float
  totalCost  Float
  product    Products @relation(fields: [productId], references: [productId])
}

model Expenses {
  expenseId String   @id @default(uuid())
  adminId   String
  admin     Admin    @relation(fields: [adminId], references: [adminId])
  category  String
  amount    Float
  timestamp DateTime
}

model SalesSummary {
  salesSummaryId   String   @id @default(uuid())
  adminId          String
  admin            Admin    @relation(fields: [adminId], references: [adminId])
  totalValue       Float
  changePercentage Float?
  date             DateTime
}

model PurchaseSummary {
  purchaseSummaryId String   @id @default(uuid())
  adminId           String
  admin             Admin    @relation(fields: [adminId], references: [adminId])
  totalPurchased    Float
  changePercentage  Float?
  date              DateTime
}

model ExpenseSummary {
  expenseSummaryId  String              @id @default(uuid())
  adminId           String
  admin             Admin               @relation(fields: [adminId], references: [adminId])
  totalExpenses     Float
  date              DateTime
  ExpenseByCategory ExpenseByCategory[]
}

model ExpenseByCategory {
  expenseByCategoryId String         @id @default(uuid())
  expenseSummaryId    String
  category            String
  amount              BigInt
  date                DateTime
  expenseSummary      ExpenseSummary @relation(fields: [expenseSummaryId], references: [expenseSummaryId])
}
