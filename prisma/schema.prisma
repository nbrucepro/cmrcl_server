// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}
model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products Product[]

  @@map("categories")
}
model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  sku         String   @unique
  price       Decimal
  quantity    Int      @default(0)
  minStock    Int      @default(10)
  maxStock    Int      @default(100)
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category Category @relation(fields:[categoryId],references:[id],onDelete:Cascade) 
  inventoryLogs InventoryLog[]

  @@map("products")
}
model InventoryLog {
  id          String         @id @default(cuid())
  productId   String
  type        InventoryType  // IN, OUT, ADJUSTMENT
  quantity    Int
  reason      String?
  previousQty Int
  newQty      Int
  createdAt   DateTime       @default(now())

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("inventory_logs")
}
enum UserRole {
  ADMIN
  MANAGER
  USER
}

enum InventoryType {
  IN
  OUT
  ADJUSTMENT
}